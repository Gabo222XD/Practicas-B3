/*
   Fundacion Kinal
   Centro educativo tecnico laboral Kinal
   Quinto perito
   Quinto electronica
   Codigo Tecnico: EB5AM 
   Curso: Taller de electronica digital y reparacion de computadoras I
   Proyecto: RFID
   Dev: ALVARO ESTRADA
   Fecha: 25 de juLio.
*/

/* coDIGO CON AMBAS UID /*
#include <SPI.h>
#include <MFRC522.h>
#include <Servo.h>

#define RST_PIN 9
#define SS_PIN 10
#define LED_VERDE 2
#define LED_ROJO 3
#define BUZZER 4

MFRC522 mfrc522(SS_PIN, RST_PIN);
Servo servo;

void setup() {
  Serial.begin(9600);
  SPI.begin();
  mfrc522.PCD_Init();
  
  pinMode(LED_VERDE, OUTPUT);
  pinMode(LED_ROJO, OUTPUT);
  pinMode(BUZZER, OUTPUT);
  
  servo.attach(5); // Conectar el servo al pin P5
  servo.write(0);  // Posición inicial de la puerta (cerrada)
  
  Serial.println("Sistema de Acceso Iniciado");
}

void loop() {
  if (!mfrc522.PICC_IsNewCardPresent()) {
    return;
  }
  
  if (!mfrc522.PICC_ReadCardSerial()) {
    return;
  }

  String content = "";
  for (byte i = 0; i < mfrc522.uid.size; i++) {
    content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
    content.concat(String(mfrc522.uid.uidByte[i], HEX));
  }
  content.toUpperCase();
  
  Serial.println("UID de la tarjeta: " + content);
  
  if (content.substring(1) == "A3 4A EF FC" || content.substring(1) == "33 76 1B CD") {
    accesoPermitido();
  } else {
    accesoDenegado();
  }
  
  mfrc522.PICC_HaltA();
  mfrc522.PCD_StopCrypto1();
}

void accesoPermitido() {
  digitalWrite(LED_VERDE, HIGH);
  tone(BUZZER, 200);
  Serial.println("Acceso Permitido");
  delay(4000);
  noTone(BUZZER);
  digitalWrite(LED_VERDE, LOW);
  servo.write(90);  // Abrir la puerta
  delay(5000);      // Mantener la puerta abierta por 5 segundos
  servo.write(0);   // Cerrar la puerta
}

void accesoDenegado() {
  digitalWrite(LED_ROJO, HIGH);
  tone(BUZZER, 400);
  Serial.println("Acceso Denegado");
  delay(4000);
  noTone(BUZZER);
  digitalWrite(LED_ROJO, LOW);
}


/*CODE SOLO 1/*


#include <SPI.h>
#include <MFRC522.h>
#include <Servo.h>

#define RST_PIN 9
#define SS_PIN 10
#define LED_VERDE 2
#define LED_ROJO 3
#define BUZZER 4

MFRC522 mfrc522(SS_PIN, RST_PIN);
Servo servo;

void setup() {
  Serial.begin(9600);
  SPI.begin();
  mfrc522.PCD_Init();
  
  pinMode(LED_VERDE, OUTPUT);
  pinMode(LED_ROJO, OUTPUT);
  pinMode(BUZZER, OUTPUT);
  
  servo.attach(5); // Conectar el servo al pin P5
  servo.write(0);  // Posición inicial de la puerta (cerrada)
  
  Serial.println("Sistema de Acceso Iniciado");
}

void loop() {
  if (!mfrc522.PICC_IsNewCardPresent()) {
    return;
  }
  
  if (!mfrc522.PICC_ReadCardSerial()) {
    return;
  }

  String content = "";
  for (byte i = 0; i < mfrc522.uid.size; i++) {
    content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
    content.concat(String(mfrc522.uid.uidByte[i], HEX));
  }
  content.toUpperCase();
  
  Serial.println("UID de la tarjeta: " + content);
  
  if (content.substring(1) == "A3 4A EF FC") {
    accesoPermitido();
  } else {
    accesoDenegado();
  }
  
  mfrc522.PICC_HaltA();
  mfrc522.PCD_StopCrypto1();
}

void accesoPermitido() {
  digitalWrite(LED_VERDE, HIGH);
  tone(BUZZER, 200);
  Serial.println("Acceso Permitido");
  delay(4000);
  noTone(BUZZER);
  digitalWrite(LED_VERDE, LOW);
  servo.write(90);  // Abrir la puerta
  delay(5000);      // Mantener la puerta abierta por 5 segundos
  servo.write(0);   // Cerrar la puerta
}

void accesoDenegado() {
  digitalWrite(LED_ROJO, HIGH);
  tone(BUZZER, 400);
  Serial.println("Acceso Denegado");
  delay(4000);
  noTone(BUZZER);
  digitalWrite(LED_ROJO, LOW);
}
